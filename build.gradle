import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url = uri("https://jitpack.io") }
    }
    dependencies {
        classpath("com.facebook.react:react-native-gradle-plugin:0.71.0")
    }
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "2.1.20"
    id("java-gradle-plugin")
}

repositories {
    google()
    mavenCentral()
}

gradlePlugin {
    plugins {
        create("react") {
            id = "com.facebook.react"
            implementationClass = "com.facebook.react.ReactPlugin"
        }
        create("reactrootproject") {
            id = "com.facebook.react.rootproject"
            implementationClass = "com.facebook.react.ReactRootProjectPlugin"
        }
    }
}

group = "com.facebook.react"

dependencies {
    implementation(project(":shared"))
    implementation(gradleApi())
    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:2.1.20")
    implementation(libs.android.gradle.plugin)
    implementation(libs.gson)
    implementation(libs.guava)
    implementation(libs.javapoet)

    testImplementation(libs.junit)
    testImplementation(libs.assertj)
    testImplementation(project(":shared-testutil"))
}

java {
    targetCompatibility = JavaVersion.VERSION_11
}

kotlin {
    jvmToolchain(11)
}

// 'var'로 변경하여 값을 할당할 수 있도록 함
var allWarningsAsErrors = project.properties["enableWarningsAsErrors"]?.toString()?.toBoolean() ?: false

tasks.withType<KotlinCompile>().configureEach { 
    kotlinOptions {
        apiVersion = "1.8"
        jvmTarget = "11"
        // 경고를 오류로 처리할지 여부를 바로 설정
        allWarningsAsErrors = allWarningsAsErrors
    }
}

tasks.withType<Test>().configureEach { 
    testLogging {
        exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
        showExceptions = true
        showCauses = true
        showStackTraces = true
    }
}
